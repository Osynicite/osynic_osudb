use crate::entity::osu::field::grade::Grade;
use crate::entity::osu::field::mode::Mode;
use crate::entity::osu::field::rank::RankedStatus;
use crate::entity::osu::field::star::StarRatings;
use crate::entity::osu::field::time::TimingPoint;
use chrono::{DateTime, Utc};
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Serialize, Deserialize)]
pub struct Beatmap {
    pub artist_ascii: Option<String>,
    pub artist_unicode: Option<String>,
    pub title_ascii: Option<String>,
    pub title_unicode: Option<String>,
    pub creator: Option<String>,
    pub difficulty_name: Option<String>,
    pub audio: Option<String>,
    pub hash: Option<String>,
    pub file_name: Option<String>,
    pub status: RankedStatus,
    pub hitcircle_count: u16,
    pub slider_count: u16,
    pub spinner_count: u16,
    pub last_modified: DateTime<Utc>,
    pub approach_rate: f32,
    pub circle_size: f32,
    pub hp_drain: f32,
    pub overall_difficulty: f32,
    pub slider_velocity: f64,
    pub std_ratings: StarRatings,
    pub taiko_ratings: StarRatings,
    pub ctb_ratings: StarRatings,
    pub mania_ratings: StarRatings,
    pub drain_time: u32,
    pub total_time: u32,
    pub preview_time: u32,
    pub timing_points: Vec<TimingPoint>,
    pub beatmap_id: i32,
    pub beatmapset_id: i32,
    pub thread_id: u32,
    pub std_grade: Grade,
    pub taiko_grade: Grade,
    pub ctb_grade: Grade,
    pub mania_grade: Grade,
    pub local_beatmap_offset: u16,
    pub stack_leniency: f32,
    pub mode: Mode,
    pub song_source: Option<String>,
    pub tags: Option<String>,
    pub online_offset: u16,
    pub title_font: Option<String>,
    pub last_played: Option<DateTime<Utc>>,
    pub is_osz2: bool,
    pub folder_name: Option<String>,
    pub last_online_check: DateTime<Utc>,
    pub ignore_sounds: bool,
    pub ignore_skin: bool,
    pub disable_storyboard: bool,
    pub disable_video: bool,
    pub visual_override: bool,
    pub mysterious_short: Option<u16>,
    pub mysterious_last_modified: u32,
    pub mania_scroll_speed: u8,
}

impl Default for Beatmap {
    fn default() -> Self {
        Self {
            artist_ascii: None,
            artist_unicode: None,
            title_ascii: None,
            title_unicode: None,
            creator: None,
            difficulty_name: None,
            audio: None,
            hash: None,
            file_name: None,
            status: RankedStatus::Unknown,
            hitcircle_count: 0,
            slider_count: 0,
            spinner_count: 0,
            last_modified: Utc::now(),
            approach_rate: 0.0,
            circle_size: 0.0,
            hp_drain: 0.0,
            overall_difficulty: 0.0,
            slider_velocity: 0.0,
            std_ratings: StarRatings::default(),
            taiko_ratings: StarRatings::default(),
            ctb_ratings: StarRatings::default(),
            mania_ratings: StarRatings::default(),
            drain_time: 0,
            total_time: 0,
            preview_time: 0,
            timing_points: Vec::new(),
            beatmap_id: 0,
            beatmapset_id: 0,
            thread_id: 0,
            std_grade: Grade::Unplayed,
            taiko_grade: Grade::Unplayed,
            ctb_grade: Grade::Unplayed,
            mania_grade: Grade::Unplayed,
            local_beatmap_offset: 0,
            stack_leniency: 0.0,
            mode: Mode::Standard,
            song_source: None,
            tags: None,
            online_offset: 0,
            title_font: None,
            last_played: None,
            is_osz2: false,
            folder_name: None,
            last_online_check: Utc::now(),
            ignore_sounds: false,
            ignore_skin: false,
            disable_storyboard: false,
            disable_video: false,
            visual_override: false,
            mysterious_short: None,
            mysterious_last_modified: 0,
            mania_scroll_speed: 0,
        }
    }
}
